AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: invoices-microservice

Parameters:
  UserPoolId:
    Type: String
    Description: User Pool ID for cognito provider
  Audience:
    Type: String
    Description: Client ID for user pool

Globals:
  Function:
    Runtime: nodejs20.x
    Timeout: 100
    MemorySize: 128
    Architectures:
      - x86_64
    Environment:
      Variables:
        TABLE_NAME: !Ref Table
        ENDPOINT_OVERRIDE: ""
        userId: ""
        userName: ""

Resources:
  HttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      Auth:
        DefaultAuthorizer: GeneralAuth
        Authorizers:
          GeneralAuth:
            IdentitySource: "$request.header.Authorization"
            JwtConfiguration:
              audience:
                - !Ref Audience
              issuer: !Sub https://cognito-idp.${AWS::Region}.amazonaws.com/${UserPoolId}
      CorsConfiguration:
        AllowMethods:
          - GET
          - POST
          - OPTIONS
          - PATCH
          - DELETE
        AllowOrigins:
          - "http://localhost:3001"
          - "https://yakhousam-invoicing-app.netlify.app"
          - "https://invoicing-app.khoudiryaya.dev"
        AllowHeaders:
          - Content-Type
          - Authorization

  Table:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TableName: invoices
      AttributeDefinitions:
        - AttributeType: S
          AttributeName: userId
        - AttributeType: S
          AttributeName: invoiceId
      KeySchema:
        - AttributeName: userId
          KeyType: HASH
        - AttributeName: invoiceId
          KeyType: RANGE

      BillingMode: PAY_PER_REQUEST
      DeletionProtectionEnabled: false

  postInvoiceFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: nodejs
      Handler: postInvoice.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref Table
      Events:
        RootGet:
          Type: HttpApi
          Properties:
            Path: /
            Method: POST
            ApiId: !Ref HttpApi

    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - functions/postInvoice.ts

  getAllInvoicesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: nodejs
      Handler: getAllInvoices.handler
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref Table
        - Statement:
            Effect: Allow
            Action:
              - dynamodb:Query
            Resource: !GetAtt Table.Arn
      Events:
        RootGet:
          Type: HttpApi
          Properties:
            Path: /
            Method: GET
            ApiId: !Ref HttpApi

    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - functions/getAllInvoices.ts

  getInvoiceByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: nodejs
      Handler: getInvoiceById.handler
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref Table
      Events:
        RootGet:
          Type: HttpApi
          Properties:
            Path: /{invoiceId}
            Method: GET
            ApiId: !Ref HttpApi

    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - functions/getInvoiceById.ts

  updateInvoiceFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: nodejs
      Handler: updateInvoice.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref Table
      Events:
        RootGet:
          Type: HttpApi
          Properties:
            Path: /{invoiceId}
            Method: PATCH
            ApiId: !Ref HttpApi
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - functions/updateInvoice.ts

  deleteInvoiceFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: nodejs
      Handler: deleteInvoice.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref Table
      Events:
        RootGet:
          Type: HttpApi
          Properties:
            Path: /{invoiceId}
            Method: DELETE
            ApiId: !Ref HttpApi
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - functions/deleteInvoice.ts
